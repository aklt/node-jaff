#!/usr/bin/env node

var util = require('util'),
    jaff = require('../');

function usage() {
    process.stdout.write(
        'Usage: jaff [filename]\n\n' +
        'stdin will be read if no filename argument is given\n\n');
}

if (process.argv.length === 2) {
    jaff.MacroTransform.fromStream(
        {}, process.stdin, process.cwd(), 'stdin', true)
        .pipe(process.stdout);
} else if (process.argv.length >= 3) {
    var arg = process.argv[2];
    if (/^--?he?l?p?$/.test(arg)) {
        usage();
    } else if (/^--?ve?r?s?i?o?n?/.test(arg)) {
        process.stdout.write('Jaff v' + jaff.version + '\n');
    } else {
        var pathParts = arg.split(/\//g),
            fileName = pathParts.pop(),
            pathName = pathParts.join('/');

        if (pathName.length > 1) {
            // Hack to make require './foo' work
            var workdir = pathName;
            try {
                process.chdir(workdir);
            } catch (e) {
                console.warn('Failed changing to', workdir, 'from', process.cwd());
            }
            arg = fileName;
        }

        jaff.readFromUrl(arg).pipe(process.stdout);
    }
} else {
    usage();
}
